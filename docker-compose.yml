services:
  postgres:
    image: "postgres:14"
    container_name: "postgres"
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - projetos-fiap-2025-hospitalar-agendamento_app_network

  zookeeper:
    image: wurstmeister/zookeeper:3.4.14  # Versão estável do Zookeeper
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"
    networks:
      - projetos-fiap-2025-hospitalar-agendamento_app_network

  kafka:
    build:
      context: .
      dockerfile: Dockerfile.kafka
    container_name: kafka
    restart: always
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092  # Simplificado
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "consultas-agendadas:1:1"  # Criação do tópico "consultas-agendadas"
    ports:
      - "9092:9092"
    networks:
      - projetos-fiap-2025-hospitalar-agendamento_app_network

  agendamento-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: agendamento_service_container
    restart: always
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: create
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - postgres
      - kafka
    ports:
      - "8080:8080"
    networks:
      - projetos-fiap-2025-hospitalar-agendamento_app_network

  adminer:
    image: adminer
    container_name: adminer
    depends_on:
      - postgres
    ports:
      - "8181:8080"
    networks:
      - projetos-fiap-2025-hospitalar-agendamento_app_network

networks:
  projetos-fiap-2025-hospitalar-agendamento_app_network:

volumes:
  postgres_data: